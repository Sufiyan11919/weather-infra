name: UAT deploy (Ephemeral EC2 + Compose)

on:
  pull_request:
    types: [labeled]

jobs:
  uat:
    if: contains(github.event.pull_request.labels.*.name, 'promote-uat')
    runs-on: ubuntu-latest
    env:
      AWS_REGION:      ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID:  ${{ secrets.AWS_ACCOUNT_ID }}
      REPOSITORY_OWNER:${{ github.repository_owner }}

    steps:
    - name: Checkout infra
      uses: actions/checkout@v3

    - name: Install AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
        unzip awscliv2.zip && sudo ./aws/install

    - name: Create security group
      id: sg
      run: |
        VPC_ID=$(aws ec2 describe-vpcs \
          --query "Vpcs[0].VpcId" --output text)
        SG_ID=$(aws ec2 create-security-group \
          --group-name weather-uat-sg \
          --description "UAT SG" \
          --vpc-id $VPC_ID \
          --query GroupId --output text)
        echo "SG_ID=$SG_ID" >> $GITHUB_ENV

    - name: Open ingress for HTTP & APIs
      run: |
        for P in 80 4000 5000; do
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ env.SG_ID }} \
            --protocol tcp --port $P --cidr 0.0.0.0/0
        done

    - name: Launch ephemeral EC2 with UAT user‑data
      id: ec2
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-0c02fb55956c7d316 \
          --count 1 \
          --instance-type t3.micro \
          --security-group-ids ${{ env.SG_ID }} \
          --user-data file://scripts/uat_user_data.sh \
          --query "Instances[0].InstanceId" \
          --output text)
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

    - name: Wait for EC2 status OK
      run: |
        aws ec2 wait instance-status-ok \
          --instance-ids ${{ env.INSTANCE_ID }}

    - name: Retrieve public IP
      id: ip
      run: |
        IP=$(aws ec2 describe-instances \
          --instance-ids ${{ env.INSTANCE_ID }} \
          --query "Reservations[0].Instances[0].PublicIpAddress" \
          --output text)
        echo "IP=$IP" >> $GITHUB_ENV

    - name: Smoke test HTTP endpoints
      run: |
        echo "Waiting for UAT API at http://$IP"
        for i in {1..15}; do
          curl -sf "http://$IP/api/fav" && break
          sleep 5
        done

    - name: Tear down EC2 & SG
      if: always()
      run: |
        aws ec2 terminate-instances --instance-ids ${{ env.INSTANCE_ID }}
        aws ec2 delete-security-group   --group-id ${{ env.SG_ID }}

    - name: Comment success on PR
      run: |
        gh pr comment ${{ github.event.pull_request.number }} \
          --body "✅ UAT passed on instance ${{ env.IP }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
