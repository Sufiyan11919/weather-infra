name: UAT Smoke-Tests

on:
  push:
    branches: [ main ]
    paths: [ 'environments/uat/**' ]
  workflow_dispatch:

env:
  CLUSTER_NAME: weather-uat
  AWS_REGION:   us-east-2

  WEATHER_PORT: 14000   # local → svc/weather-api-uat-umbrella:4000
  FAV_PORT:     15000   # local → svc/favourite-api-uat-umbrella:4000
  FRONT_PORT:   16000   # local → svc/weather-frontend-uat-umbrella:80

jobs:
  smoke-test:
    runs-on: ubuntu-latest

    steps:
    # ───────────────── AWS credentials (long-lived keys) ────────────────
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region:            ${{ env.AWS_REGION }}

    # ───────────────── kubectl config ───────────────────────────────────
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

    # ───────────────── wait for rollout ─────────────────────────────────
    - name: Wait for Deployments
      run: |
        set -e
        for d in favourite-api-uat-umbrella \
                 weather-api-uat-umbrella  \
                 weather-frontend-uat-umbrella
        do
          echo "⏳ rollout status $d"
          kubectl -n uat rollout status deploy/$d --timeout=180s
        done

    # ───────────────── start port-forwards ──────────────────────────────
    - name: Start port-forwards
      run: |
        set -e
        kubectl -n uat port-forward svc/weather-api-uat-umbrella      $WEATHER_PORT:4000 &
        PF1=$!
        kubectl -n uat port-forward svc/favourite-api-uat-umbrella    $FAV_PORT:4000 &
        PF2=$!
        kubectl -n uat port-forward svc/weather-frontend-uat-umbrella $FRONT_PORT:80 &
        PF3=$!
        echo "PF1=$PF1" >> $GITHUB_ENV
        echo "PF2=$PF2" >> $GITHUB_ENV
        echo "PF3=$PF3" >> $GITHUB_ENV
        sleep 10

    # ───────────────── curls ───────────────────────────────────────────
    - name: Curl weather-api
      run: curl -f "http://127.0.0.1:$WEATHER_PORT/api/weather?city=Berlin"

    - name: Curl favourite-api (save & list)
      run: |
        curl -f -X POST "http://127.0.0.1:$FAV_PORT/api/fav" \
             -H 'Content-Type: application/json' \
             -d '{"city":"Berlin","user":"demo@example.com"}'
        curl -f "http://127.0.0.1:$FAV_PORT/api/fav?user=demo@example.com"

    - name: Curl frontend root
      run: curl -f "http://127.0.0.1:$FRONT_PORT/"

    # ───────────────── clean up ────────────────────────────────────────
    - name: Stop port-forwards
      if: always()
      run: |
        for pid in $PF1 $PF2 $PF3; do
          [ -n "$pid" ] && kill "$pid" || true
        done
