# .github/workflows/promote-via-tag.yml
name: Promote via Git Tag

# 1. Give the workflow write rights to repo contents
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*.*.*'

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  SERVICES: favourite-api weather-api weather-frontend
  GA_TAG: ${{ github.ref_name }}

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # 2. Checkout full repo + allow pushes
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 3. AWS creds (for ECR)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 4. Retag existing RC images in ECR to the new GA tag
      - name: Retag RC → GA in ECR
        shell: bash
        run: |
          set -euo pipefail
          for svc in $SERVICES; do
            if aws ecr list-images \
                 --repository-name "$svc" \
                 --filter tagStatus=TAGGED \
                 --query "contains(imageIds[].imageTag, '${GA_TAG}')" \
                 --output text | grep -qi true; then
              echo "$svc:${GA_TAG} exists—skipping."
              continue
            fi
            RC_PATH=uat/environments/$svc/values.yaml
            echo "Reading RC tag from $RC_PATH"
            RC_TAG=$(grep '^  tag:' "$RC_PATH" | awk -F'"' '{print $2}')
            aws ecr batch-get-image \
              --repository-name "$svc" \
              --image-ids imageTag="$RC_TAG" \
              --query 'images[0].imageManifest' \
              --output text > manifest.json
            aws ecr put-image \
              --repository-name "$svc" \
              --image-tag "$GA_TAG" \
              --image-manifest file://manifest.json
            rm manifest.json
          done

      # 5. Create a new branch for the promotion
      - name: Create branch
        run: git checkout -b promote-${GA_TAG}

      # 6. Update image tags in each prod environment’s values.yaml
      - name: Bump image tags in prod overlays
        run: |
          for svc in $SERVICES; do
            file=prod/environments/$svc/values.yaml
            echo "Updating $file → tag: \"${GA_TAG}\""
            sed -i "s|tag: \".*\"|tag: \"${GA_TAG}\"|" "$file"
          done

      # 7. Commit & push that branch
      - name: Commit & push
        run: |
          git config user.name  "promotion-bot"
          git config user.email "bot@example.com"
          git add prod/environments/*/values.yaml
          git commit -m "chore: bump prod image tags → ${GA_TAG}"
          git push --set-upstream origin promote-${GA_TAG}

      # 8. Open a PR from promote-<tag> into main
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token:           ${{ secrets.GITHUB_TOKEN }}
          branch:          promote-${{ env.GA_TAG }}
          base:            main
          title:           "Promote services → ${{ env.GA_TAG }}"
          body:            |
            This PR bumps the Docker image tags in:
            - prod/environments/favourite-api/values.yaml  
            - prod/environments/weather-api/values.yaml  
            - prod/environments/weather-frontend/values.yaml  
            
            to **${{ env.GA_TAG }}**.
