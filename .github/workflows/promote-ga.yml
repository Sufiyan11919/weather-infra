name: Promote GA via ECR
on:
  push:
    # only non-rc tags, e.g. v1.4.0
    tags:
      - 'v*.*.*'

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  SERVICES: favourite-api weather-api weather-frontend
  GA_TAG: ${{ github.ref_name }}       # e.g. "v1.4.0"

jobs:
  retag-and-bump:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout infra repo to read UAT values
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Configure AWS so we can talk to ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 3) Retag RC ‚Üí GA, skipping services that already have GA
      - name: Retag RC images to GA (skip existing)
        run: |
          set -euo pipefail

          for svc in $SERVICES; do
            echo "üîç Checking if $svc already has GA tag ${GA_TAG}..."
            GA_EXISTS=$(aws ecr list-images \
              --repository-name "$svc" \
              --filter tagStatus=TAGGED \
              --query "contains(imageIds[].imageTag, '${GA_TAG}')" \
              --output text)

            if [ "$GA_EXISTS" = "True" ] || [ "$GA_EXISTS" = "true" ]; then
              echo "‚úÖ $svc:$GA_TAG already exists‚Äîskipping retag."
              continue
            fi

            echo "‚è≥ Extracting RC tag from UAT overlay for $svc..."
            RC_TAG=$(grep '^  tag:' environments/uat/$svc/values.yaml \
                     | awk -F'"' '{print $2}')

            if [[ ! "$RC_TAG" =~ ^${GA_TAG}-rc\.[0-9]+$ ]]; then
              echo "‚ùå Unexpected RC tag '$RC_TAG' for $svc‚Äîaborting."
              exit 1
            fi

            echo "üîñ Retagging $svc:$RC_TAG ‚Üí $svc:$GA_TAG"
            aws ecr batch-get-image \
              --repository-name "$svc" \
              --image-ids imageTag="$RC_TAG" \
              --query 'images[0].imageManifest' --output text \
              > manifest.json

            aws ecr put-image \
              --repository-name "$svc" \
              --image-tag "$GA_TAG" \
              --image-manifest file://manifest.json
          done

      # 4) Install & auth GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gh
      - name: Authenticate GH CLI
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      # 5) Update prod overlay and open PR
      - name: Bump prod values & open PR
        run: |
          git checkout -b bump-prod-${GA_TAG}

          for svc in $SERVICES; do
            FILE=environments/prod/$svc/values.yaml
            echo "‚úèÔ∏è  Updating $FILE ‚Üí tag: ${GA_TAG}"
            sed -i "s|tag:.*|tag: \"${GA_TAG}\"|" "$FILE"
          done

          git commit -am "chore: promote services ‚Üí ${GA_TAG}"
          git push -u origin bump-prod-${GA_TAG}

          gh pr create \
            --title  "Promote all services ‚Üí ${GA_TAG}" \
            --body   "Automated GA promotion from infra" \
            --base   main \
            --head   bump-prod-${GA_TAG}
